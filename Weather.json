{
  "name": "Weather",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -400,
        -220
      ],
      "id": "007ae3dc-81a6-4d9c-973b-c0f79f810853",
      "name": "When clicking â€˜Execute workflowâ€™"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {}
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -400,
        40
      ],
      "id": "7948b296-8708-4fd9-8718-6a71197765e3",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "url": "https://api.open-meteo.com/v1/forecast?latitude=21.14&longitude=79.08&hourly=temperature_2m&forecast_days=3",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -80,
        -80
      ],
      "id": "8444411e-d30d-4f7b-9de5-e69082629909",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "jsCode": "const input = items[0].json;\n\n// Try array or object-style access\nconst weather = Array.isArray(input) ? input[0] : input[\"0\"] || input;\n\nif (!weather?.hourly?.temperature_2m) {\n  throw new Error(\"Missing hourly weather data ðŸ˜¤\");\n}\n\nconst temps = weather.hourly.temperature_2m;\nconst high = Math.max(...temps);\nconst low = Math.min(...temps);\n\nreturn [\n  {\n    json: {\n      message: `The temperature in Nagpur is: high -> ${high}Â°C and low -> ${low}Â°C`\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        180,
        -80
      ],
      "id": "5162d947-d09c-49d3-9c48-49d4bbbb1ef8",
      "name": "Code"
    },
    {
      "parameters": {
        "sendTo": "tanvibandebuche@gmail.com",
        "subject": "Weather report",
        "emailType": "text",
        "message": "={{ $json.message }}",
        "options": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        420,
        -80
      ],
      "id": "cf8316b1-6b3b-4191-a6fc-d1cead26ead3",
      "name": "Send a message",
      "webhookId": "1c2a02a4-9669-4b41-a546-aae4a3aaa8cd",
      "credentials": {
        "gmailOAuth2": {
          "id": "cs8depEBRBhDpZ3w",
          "name": "Gmail account"
        }
      }
    }
  ],
  "pinData": {
    "HTTP Request": [
      {
        "json": {
          "latitude": 21.125,
          "longitude": 79.125,
          "generationtime_ms": 0.013709068298339844,
          "utc_offset_seconds": 0,
          "timezone": "GMT",
          "timezone_abbreviation": "GMT",
          "elevation": 303,
          "hourly_units": {
            "time": "iso8601",
            "temperature_2m": "Â°C"
          },
          "hourly": {
            "time": [
              "2025-07-04T00:00",
              "2025-07-04T01:00",
              "2025-07-04T02:00",
              "2025-07-04T03:00",
              "2025-07-04T04:00",
              "2025-07-04T05:00",
              "2025-07-04T06:00",
              "2025-07-04T07:00",
              "2025-07-04T08:00",
              "2025-07-04T09:00",
              "2025-07-04T10:00",
              "2025-07-04T11:00",
              "2025-07-04T12:00",
              "2025-07-04T13:00",
              "2025-07-04T14:00",
              "2025-07-04T15:00",
              "2025-07-04T16:00",
              "2025-07-04T17:00",
              "2025-07-04T18:00",
              "2025-07-04T19:00",
              "2025-07-04T20:00",
              "2025-07-04T21:00",
              "2025-07-04T22:00",
              "2025-07-04T23:00",
              "2025-07-05T00:00",
              "2025-07-05T01:00",
              "2025-07-05T02:00",
              "2025-07-05T03:00",
              "2025-07-05T04:00",
              "2025-07-05T05:00",
              "2025-07-05T06:00",
              "2025-07-05T07:00",
              "2025-07-05T08:00",
              "2025-07-05T09:00",
              "2025-07-05T10:00",
              "2025-07-05T11:00",
              "2025-07-05T12:00",
              "2025-07-05T13:00",
              "2025-07-05T14:00",
              "2025-07-05T15:00",
              "2025-07-05T16:00",
              "2025-07-05T17:00",
              "2025-07-05T18:00",
              "2025-07-05T19:00",
              "2025-07-05T20:00",
              "2025-07-05T21:00",
              "2025-07-05T22:00",
              "2025-07-05T23:00",
              "2025-07-06T00:00",
              "2025-07-06T01:00",
              "2025-07-06T02:00",
              "2025-07-06T03:00",
              "2025-07-06T04:00",
              "2025-07-06T05:00",
              "2025-07-06T06:00",
              "2025-07-06T07:00",
              "2025-07-06T08:00",
              "2025-07-06T09:00",
              "2025-07-06T10:00",
              "2025-07-06T11:00",
              "2025-07-06T12:00",
              "2025-07-06T13:00",
              "2025-07-06T14:00",
              "2025-07-06T15:00",
              "2025-07-06T16:00",
              "2025-07-06T17:00",
              "2025-07-06T18:00",
              "2025-07-06T19:00",
              "2025-07-06T20:00",
              "2025-07-06T21:00",
              "2025-07-06T22:00",
              "2025-07-06T23:00"
            ],
            "temperature_2m": [
              25.3,
              25.2,
              25.3,
              25.6,
              26.2,
              27,
              27.4,
              28.2,
              28.4,
              27.8,
              27.6,
              27.6,
              27.2,
              26.9,
              26.4,
              26.1,
              26,
              25.8,
              25.6,
              25.5,
              25.4,
              25.2,
              25.2,
              25,
              24.7,
              24.4,
              24.4,
              24.4,
              25.3,
              26,
              26.6,
              27.1,
              27.2,
              27.7,
              27.6,
              27.3,
              26.4,
              26.1,
              25.7,
              25.5,
              25.1,
              25,
              24.6,
              24.4,
              24.5,
              24.4,
              24.3,
              24.3,
              24.2,
              24,
              24,
              24.2,
              24,
              24.4,
              24.7,
              24.6,
              24.5,
              24.6,
              24.7,
              24.4,
              24.2,
              24,
              23.7,
              23.7,
              23.8,
              23.7,
              23.5,
              23.5,
              23.6,
              23.4,
              23.4,
              23.2
            ]
          }
        }
      }
    ]
  },
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking â€˜Execute workflowâ€™": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Send a message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "c032b073-23a3-42cf-b0ac-1d7af9930414",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "9920dde704c9c8c8f655f89f8ce305195c8863df9433413b1daa0e53b40dd17a"
  },
  "id": "pGu5w8xnACUCZuFP",
  "tags": []
}